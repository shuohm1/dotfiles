# .bashrc.env

# functions for PATH
# see: https://qiita.com/key-amb/items/ce39b0c85b30888e1e3b
function get_uniqued_path() {
  local oldpath="$(echo "$1" | tr ':' '\n')"
  local newpath=""

  local p
  while read p; do
    case ":${newpath}:" in
      *:"${p}":*)
        # p is already in newpath
        ;;
      *)
        # add p to newpath
        if [ -n "${newpath}" ]; then
          newpath="${newpath}:${p}"
        else
          newpath="${p}"
        fi
        ;;
    esac
  done < <(echo "${oldpath}")

  echo "${newpath}"
}

function export_uniqued_path() {
  local p="$(get_uniqued_path "${PATH}")"
  if [ -n "${p}" ]; then
    export PATH="${p}"
  fi
}
function export_uniqued_manpath() {
  local p="$(get_uniqued_path "${MANPATH}")"
  if [ -n "${p}" ]; then
    # append ':' so that 'manpath' can append paths
    # based on /etc/man_db.conf
    export MANPATH="${p}:"
  fi
}

export LANG=C
export LC_ALL=
if [ -x "$(command which locale 2> /dev/null)" ]; then
  export LC_CTYPE=ja_JP.utf8
fi

if [ -z "${EUID}" ]; then
  EUID="$(id -u)"
  UID="$(id -ru)"
fi

export USER="$(id -nu)"
export SHELL="$(readlink -e "/proc/$$/exe" 2> /dev/null)"
export HOSTNAME="$(hostname -s 2> /dev/null)"
export LONGHOSTNAME="$(hostname -f 2> /dev/null)"

# terminfo
if [ -d "${HOME}/.terminfo" ]; then
  export TERMINFO="${HOME}/.terminfo"
fi

# a socket directory for screen
# note: permission must be 700
function set_screendir() {
  local dirs="${HOME}/.screen"
  if [ "${HOSTNAME}" != "localhost" ]; then
    dirs="${dirs}:${HOME}/.screen/${HOSTNAME}"
  fi

  local p
  while read p; do
    if [[ -e "${p}" && ! -d "${p}" ]]; then
      continue
    fi

    if [ ! -e "${p}" ]; then
      mkdir -m 700 "${p}"
    elif [ "$(stat --format="%a" "${p}")" != "700" ]; then
      chmod 700 "${p}"
    fi

    export SCREENDIR="${p}"
  done < <(echo "${dirs}" | tr ':' '\n')
}
set_screendir

# less
# --LONG-PROMPT: display an information line (the bottom of terminal)
# --RAW-CONTROL-CHARS: display control characters except color escapes
# --tabs: width of a tab
export LESS="--LONG-PROMPT --RAW-CONTROL-CHARS --tabs=4"
# custom key bindings for less
function set_lesskey() {
  local src="${HOME}/.lesskey"
  local dest="${HOME}/.less"
  local gencmd="$(command which lesskey 2> /dev/null)"

  if [[ ! -e "${dest}" && -f "${src}" && -x "${gencmd}" ]]; then
    "${gencmd}" --output "${dest}" "${src}"
  fi

  if [ -f "${dest}" ]; then
    export LESSKEY="${dest}"
  fi
}
set_lesskey
# syntax highlight for less
function set_srchilite() {
  local p="${HOME}/.source-highlight/src-hilite-lesspipe.bash"
  if [ -x "${p}" ]; then
    export LESSOPEN="| ${p} %s"
  fi
}
set_srchilite

# editor for less, sudoedit, crontab, etc.
if [ -x "$(command which vim 2> /dev/null)" ]; then
  export EDITOR=vim
fi

# vim
# since `vim -u /path/to/vimrc` may cause errors,
# use VIMINIT to read another vimrc file
# see: https://vim-jp.org/vimdoc-ja/starting.html#VIMINIT
if [ -f "${HOME}/.vimrc" ]; then
  export MYVIMRC="${HOME}/.vimrc"
  export VIMINIT="source ${MYVIMRC}"
fi

# base directory for python
# see: http://liosk.blog103.fc2.com/blog-entry-217.html
if [ -d "${HOME}/usr/python3" ]; then
  export PYTHONUSERBASE="${HOME}/usr/python3"
fi

PATH="/usr/local/sbin:/usr/sbin:/sbin:${PATH}"
PATH="/usr/local/bin:/usr/bin:/bin:${PATH}"
PATH="${HOME}/bin:${PATH}"

export_uniqued_path
export_uniqued_manpath

if [ -f "${HOME}/.bashrc.env.local" ]; then
  source "${HOME}/.bashrc.env.local"
fi
