# .zsh_hooks

# hook functions
# 1. zshaddhistory: before the input command is added to histories
# 2. preexec:       before the input command is executed
# 3. -------------- the input command is executed
# 4. chpwd:         after the current working directory is changed
# 5. precmd:        before the prompt is shown (i.e. after the previous
#                   command exited)
# 6. periodic:      before the prompt is shown, but only if $PERIOD
#                   seconds have passed since the previous `periodic`
# *. zshexit:       before this zsh exits
autoload -Uz add-zsh-hook

function update_prex_windowtitle() {
  if [ -n "${WINDOWTITLE}" ]; then
    return
  fi

  # delete control characters, just in case
  local t="${1//[[:cntrl:]]}"
  # (z) splits words in a manner of shell parsing (cf. man zshexpn ->
  #     Parameter Expansion Flags)
  typeset -a args=("${(z)t}")
  # the entire command string for a sentinel
  t="${args[*]}"

  # find the 0th argument of the given command
  local s=
  local re='^([(){}]|[[:print:]]+[=])'
  for s in "${args[@]}"; do
    # - `s` does not start with parentheses nor braces
    # - `s` is not a setting of an environment variable
    if [[ ! ( "$s" =~ ${re} ) ]]; then
      t="$s"
      break
    fi
  done

  send_windowtitle "$t"
}

# register hooks for screen
if [[ "${TERM}" = screen* ]]; then
  add-zsh-hook preexec update_prex_windowtitle
  add-zsh-hook preexec reset_hardstatus
  add-zsh-hook precmd  reset_windowtitle
  add-zsh-hook precmd  reset_hardstatus
fi
