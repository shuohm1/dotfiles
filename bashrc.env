# .bashrc.env

function get_shpath() {
  local shname="$(echo "$1" | sed 's/^-//')"
  echo "$(which ${shname} 2> /dev/null)"
}
function set_shpath() {
  local shpath="$(get_shpath "$1")"
  if [ -x "${shpath}" ]; then
    export SHELL="${shpath}"
  fi
}

function set_hostname() {
  local hostname1="$(hostname 2> /dev/null)"
  local hostname2="$(hostname -f 2> /dev/null)"
  if [ "${hostname1%%.*}" != "${hostname2%%.*}" ]; then
    export LONGHOSTNAME="${hostname1}"
  else
    if [ ${#hostname1} -ge ${#hostname2} ]; then
      export LONGHOSTNAME="${hostname1}"
    else
      export LONGHOSTNAME="${hostname2}"
    fi
  fi
  export HOSTNAME="${LONGHOSTNAME%%.*}"
}

# socket directory for screen
function set_screen_sockdir() {
  local sockdir="$1"
  if [ -e "${sockdir}" -a ! -d "${sockdir}" ]; then
    return 1
  fi

  if [ ! -e "${sockdir}" ]; then
    mkdir -m 700 "${sockdir}" 2> /dev/null
  elif [ "$(stat --format="%a" "${sockdir}")" != "700" ]; then
    # permission must be 700
    chmod 700 "${sockdir}" 2> /dev/null
  fi

  if [ $? -eq 0 ]; then
    export SCREENDIR="${sockdir}"
  fi
}

# custom key bindings for less
function generate_less_keybind() {
  local keybin="${HOME}/.less"
  local keysrc="${HOME}/.lesskey"
  local keycompiler="$(which lesskey 2> /dev/null)"

  # generate the .less if not exists
  # note: the .less is binary format
  if [ ! -f "${keybin}" -a -f "${keysrc}" -a -x "${keycompiler}" ]; then
    ${keycompiler} --output "${keybin}" "${keysrc}"
  fi
}

# syntax highlight for less
function set_lessopen() {
  local pipescript="$(which src-hilite-lesspipe.sh 2> /dev/null)"
  if [ ! -x "${pipescript}" ]; then
    # may be here
    pipescript="/usr/share/source-highlight/src-hilite-lesspipe.sh"
  fi

  if [ -x "${pipescript}" ]; then
    export LESSOPEN="| ${pipescript} %s"
  fi
}

# https://qiita.com/key-amb/items/ce39b0c85b30888e1e3b
function get_uniqued_path() {
  local origpath="$1"
  local newpath=""
  local p

  for p in $(echo ${origpath} | tr ':' ' '); do
    case ":${newpath}:" in
      *:"${p}":*)
        # p is already in newpath
        ;;
      *)
        # add p to newpath
        if [ "${newpath}" ]; then
          newpath="${newpath}:${p}"
        else
          newpath="${p}"
        fi
        ;;
    esac
  done

  unset p
  echo "${newpath}"
}

function export_uniqued_path() {
  local uniqued="$(get_uniqued_path "${PATH}")"
  if [ "${uniqued}" ]; then
    export PATH="${uniqued}"
  fi
}
function export_uniqued_manpath() {
  local uniqued="$(get_uniqued_path "${MANPATH}")"
  if [ "${uniqued}" ]; then
    # append ':' so that 'manpath' can append paths
    # based on /etc/man_db.conf
    export MANPATH="${uniqued}:"
  fi
}

export LANG=C
export LC_CTYPE=ja_JP.utf8
export LC_ALL=

if [ -z "${EUID}" ]; then
  EUID="$(id -u)"
  UID="$(id -ru)"
fi

set_shpath "$0"
set_hostname
export USER="$(id -nu)"

# terminfo
if [ -d "${HOME}/.terminfo" ]; then
  export TERMINFO="${HOME}/.terminfo"
fi

# screen
set_screen_sockdir "${HOME}/.screen"
if [ "${HOSTNAME}" != "localhost" ]; then
  set_screen_sockdir "${HOME}/.screen/${HOSTNAME}"
fi

# less settings
# --LONG-PROMPT: display an information line (the bottom of terminal)
# --RAW-CONTROL-CHARS: display control characters except color escapes
# --tabs: width of a tab
export LESS="--LONG-PROMPT --RAW-CONTROL-CHARS --tabs=4"
# key bindings
generate_less_keybind
if [ -f "${HOME}/.less" ]; then
  export LESSKEY="${HOME}/.less"
fi
# pipe script
set_lessopen

# base directory for python
# see: http://liosk.blog103.fc2.com/blog-entry-217.html
if [ -d "${HOME}/usr/python3" ]; then
  export PYTHONUSERBASE="${HOME}/usr/python3"
fi

PATH="/usr/local/sbin:/usr/sbin:/sbin:${PATH}"
PATH="/usr/local/bin:/usr/bin:/bin:${PATH}"

PATH="${HOME}/bin:${PATH}"
PATH="${HOME}/usr/bin:${PATH}"
PATH="${HOME}/usr/python3/bin:${PATH}"

export_uniqued_path
export_uniqued_manpath

if [ -f ~/.bashrc.env.local ]; then
  source ~/.bashrc.env.local
fi
